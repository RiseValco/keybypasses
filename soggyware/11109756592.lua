-- This file was generated using Luraph Obfuscator v13.5.9

return(function(w_,Y_,v_,S_,d_,c_,W_,A_,s_,B_,H_,p_,y_,K_,r_,l_,G_,U_,i_,k_,E_,D_,n_,u_,g_,I_,Z_,X_,z_,m_,b_,O_,a_,M_,L_,Q_,P_,V_,J,...)local R_=1;local q=select;local M,y=nil,nil;while R_<=0x1 do if R_==0 then y=Z_;R_=2;else M={[0X0]=1};do R_=0;end;end;end;local h,e_,t,C,g,Z,x=pcall,{},tostring,nil,nil,nil,(nil);for x9=0x0,0X03 do if not(x9<=1)then if x9==0X2 then Z=r_.rep;else x=g_;end;else if x9==0x00000 then do C=r_.sub;end;else g=i_;end;end;end;local r,F=nil,nil;for lf=0X0,0x1 do do if lf~=0x00000 then F=r_.byte;else r=U_;end;end;end;do R_=0X6;end;local j_,U,t_,u,E,c,O=nil,nil,nil,nil,nil,nil,nil;repeat if not(R_<=3)then do if R_<=5 then if R_==0X00004 then E=d_;R_=0x5;else c=coroutine.wrap;do R_=1;end;end;elseif R_~=6 then do u=u_;end;do R_=0X4;end;else j_={};R_=0X0;end;end;else do if not(R_<=1)then do if R_~=2 then t_=0x001;R_=0X7;else R_=8;end;end;else if R_~=0x0 then O=c_ or B_.unpack;R_=0X02;else U=y_;R_=3;end;end;end;end;until R_==8;local s,N,m,W=nil,nil,nil,nil;local e=error;do for U9=0x0,0x4 do if U9<=1 then if U9~=0X000 then N=O_;else s=4294967296;end;else if not(U9<=0x2)then do if U9~=3 then else W=(m and m()or m_);end;end;else m=E_;end;end;end;end;do R_=2;end;local v,i,w=nil,nil,(nil);repeat do if not(R_<=0)then if R_~=1 then v=0X1;R_=0X000;else wdo break;end;end;else i=W_;R_=1;end;end;until(false);local j,k=type,(nil);w=r(C(w,0X005),v_,function(vD)do if F(vD,w_)~=k_ then local ve=x(N(vD,0X10));if not(k)then return ve;else local DF,SF=2,(nil);while'\079\0511'do if DF<=0X0 then k=nil;DF=0X1;else if DF==0X1 then return SF;else SF=Z(ve,k);DF=0;end;end;end;end;else local lZ=(0X001);do while 0X7c4d8df0 do do if lZ~=0 then k=N(C(vD,1,S_));lZ=0;else do return'';end;end;end;end;end;end;end;end);local S=function()local MS,nS=0X001,(nil);while 0X530BB5fc do if not(MS<=0X0)then if MS~=0X1 then do v=v+S_;end;MS=0;else do nS=F(w,v,v);end;MS=2;end;else return nS;end;end;end;local G=2147483648;local H=(function()local QR,pR,ZR,FR=F(w,v,v+3);for vN=0X0,0X001 do if vN~=0X0 then return FR*16777216+ZR*0X10000+pR*0X0100+QR;else v=v+0X4;end;end;end);local l=(s-1);R_=0X0;local Y,a,K=nil,nil,nil;repeat if R_<=0 then do Y=0x2^52;end;R_=0x00001;else if R_==0X1 then a=G-0X1;R_=2;else K=function()local tV,AV=H(),(H());for Qn=0,1 do if Qn~=0X00000 then return AV*s+tV;else if not(AV>=G)then else AV=AV-s;end;end;end;end;break;end;end;until(false);do local Tt,Xt=0,(nil);while 0.04665545064475529 do if Tt==0X0 then Xt=0X002;do Tt=0X00001;end;else for r9=1,31 do local R9=(0);while R9~=2 do do if R9~=0X0 then Xt=Xt*0X2;R9=2;else(M)[r9]=Xt;R9=0X001;end;end;end;end;break;end;end;end;R_=0X0;local L,P,D,z=nil,nil,nil,nil;do while 0.5121037550181394 do do if not(R_<=0X1)then do if R_==2 then do D=function()local qH=(H());local KH=(6);local VH,LH,zH,vH,PH=nil,nil,nil,nil,nil;while 1505694029 do if KH<=0X3 then if KH<=1 then if KH~=0 then LH=0X1;KH=0;else zH=(-1)^P(VH,31,1);KH=3;end;else do if KH==0X2 then return zH*(0x2^(vH-1023))*(PH/Y+LH);else vH=P(VH,0X14,0xb);KH=5;end;end;end;else do if not(KH<=0X0005)then do if KH~=6 then do if not(qH==0X0000 and VH==M_)then else return 0x0;end;end;KH=0X1;else do VH=H();end;do KH=7;end;end;end;else do if KH~=4 then do PH=P(VH,M_,20)*s+qH;end;KH=4;else if vH==0 then if PH~=0 then for ob=0,0x01 do if ob~=0 then LH=0X000;else do vH=1;end;end;end;else return zH*0;end;else if vH~=2047 then elseif PH~=0 then do return zH*(0X1/0);end;else return zH*(0/0);end;end;do KH=0X02;end;end;end;end;end;end;end;end;end;R_=0X0003;else do z=(L_ or bit32);end;do break;end;end;end;else if R_==0X0 then L={[0X0]={[0X0]=0x0,S_,2,H_,4,5,6,7,8,9,10,11,0Xc,13,0XE,0XF},{[0x00]=0x00001,0x0,3,0X2,G_,0x4,7,6,9,8,11,10,13,0xc,0x000f,14},{[0X0]=0x2,0X3,0X0,1,0x6,0X7,4,5,10,11,8,s_,Y_,15,0X000c,0X00d},{[0]=3,2,1,0X00000,7,6,0X5,0x4,11,10,9,8,0XF,0XE,13,l_},{[0]=a_,5,6,0x0007,0,1,2,H_,12,0Xd,14,0X0F,8,0x9,0xa,11},{[M_]=G_,0X4,7,6,0x1,0X0,0X0003,w_,13,12,15,0xe,9,0X08,11,0xA},{[0]=6,P_,4,G_,2,0X3,0,1,0X00E,0Xf,l_,0xd,10,0X0000B,8,0X009},{[M_]=0X7,0x6,5,0X4,0x3,2,1,0X0,0Xf,14,0X0000D,12,11,0xA,9,0x8},{[0]=0X8,9,0Xa,0XB,0Xc,0X0D,14,0XF,0X000,1,2,3,0X4,0x5,6,0X7},{[0]=9,n_,0xB,10,0XD,l_,15,0xe,0x1,0x0,0X3,2,0X0005,4,7,0X00006},{[0]=10,11,n_,9,14,15,0X000c,13,0X2,3,0X0,1,6,P_,0X4,5},{[0X0]=0XB,10,9,0X8,0xf,Y_,13,0X0C,3,2,0X1,0,7,0X6,0x005,0X4},{[0X000]=0X0000C,0XD,14,0xF,8,s_,0XA,0Xb,0x4,0X5,6,P_,0X0,0X0001,2,3},{[0]=13,l_,15,0XE,9,8,0X000B,K_,0X0005,a_,P_,D_,0X00001,0x0,3,2},{[0X000]=14,15,12,13,K_,11,8,9,0X6,7,0X4,G_,0x2,0X3,0X0,0X001},{[0]=15,14,13,12,0Xb,10,9,n_,P_,0X6,G_,a_,H_,0X02,0X1,0}};R_=1;else P=function(Y5,x5,I5)local y5=(Y5/M[x5])%M[I5];y5=y5-y5%1;do return y5;end;end;R_=2;end;end;end;end;end;local I=(z and z[z_]or function(Sh,Mh)local Gh,Yh=nil,(nil);for fL=0X0,5 do if not(fL<=0x2)then if fL<=3 then Yh=0;else if fL==0X4 then while Sh>0X00000 and Mh>0 do local eA,DA,XA=0X1,nil,(nil);repeat if not(eA<=2)then if not(eA<=3)then if eA~=4 then Sh=(Sh-DA)/16;eA=0x3;else XA=Mh%0X10;eA=0X2;end;else Mh=(Mh-XA)/0X10;eA=0;end;else if eA<=0X00000 then Gh=Gh*16;eA=0X6;else do if eA~=1 then Yh=Yh+L[DA][XA]*Gh;eA=5;else DA=Sh%16;eA=0X0004;end;end;end;end;until eA>=0X0006;end;else return Yh+Sh*Gh+Mh*Gh;end;end;else do if fL<=0 then Sh=Sh%s;elseif fL==1 then Gh=1;else Mh=Mh%s;end;end;end;end;end);local p=(z and z[I_]or function(Jr,Pr)Jr=Jr%s;Pr=Pr%s;do return((Jr+Pr)-I(Jr,Pr))/0X002;end;end);local b=z and z.bor or function(Ps,qs)do Ps=Ps%s;end;local xs=0X0;repeat if xs==0X0 then qs=qs%s;xs=0X1;else return l-p(l-Ps,l-qs);end;until(false);end;local V,A,Q=z and z.bnot or function(P7)return l-(P7%s);end,z and z[p_],(z and z[b_]);A=A or function(DI,yI)if not(yI>=32)then else return 0;end;for kS=0,1 do do if kS~=0 then do return(DI*M[yI])%s;end;else if yI<0X0 then return Q(DI,-yI);end;end;end;end;end;do Q=Q or function(ef,wf)local Wf=(nil);local sf=(2);repeat if not(sf<=0X1)then if sf~=2 then do Wf=(ef%s/M[wf]);end;sf=0;else if wf>=0x20 then return 0;end;sf=0X0001;end;else if sf==0 then return Wf-Wf%0X1;else if not(wf<0)then else return A(ef,-wf);end;do sf=3;end;end;end;until false;end;end;R_=0x002;local T,R,o,J_,d,X,f_,q_=nil,nil,nil,nil,nil,nil,nil,(nil);while R_~=0x8 do do if R_<=0X3 then if R_<=1 then if R_~=0 then d=V_;do R_=0X00005;end;else R={[0X8]=7,[0X1]=G_,[2]=7,[3]=0X004,[0X006]=2,[9]=7,[2]=9,[0x2]=7,[5]=D_,[9]=7,[7]=0X00009,[0X4]=0x8};R_=0X3;end;else if R_~=2 then o=function()local Pg,bg=0X0,nil;repeat do if not(Pg<=0X0)then if Pg~=1 then if not(bg>a)then else return bg-s;end;Pg=1;else return bg;end;else do bg=T();end;Pg=0X2;end;end;until(false);end;R_=7;else do T=function()local AJ,IJ=0,(0);while 0.7579899238325597 do local RQ=F(w,v,v);do v=v+1;end;AJ=b(AJ,A(p(RQ,0x7f),IJ));if p(RQ,128)==0X00000 then return AJ;end;IJ=IJ+0x7;end;end;end;R_=0;end;end;else do if not(R_<=0X005)then if R_~=0x6 then J_=S();R_=0X00001;else q_=function(uu)local eu=({F(w,v,v+H_)});local au,Au,lu=0X0,nil,(nil);while au<2 do if au~=0X0 then do lu=I(eu[2],f_);end;au=0X2;else Au=I(eu[0X0001],f_);au=1;end;end;au=0X2;local Tu,Gu=nil,(nil);while au<=0X00003 do if not(au<=0x1)then if au~=0X2 then f_=(201*f_+uu)%0X100;au=0X0;else do Tu=I(eu[0X03],f_);end;au=0X001;end;else if au~=0x0 then Gu=I(eu[0X04],f_);au=0X3;else v=v+0X4;au=4;end;end;end;return Gu*16777216+Tu*0X10000+lu*0X000100+Au;end;R_=8;end;else if R_==0X4 then f_=S();R_=0x6;else X={0x00003,6,1};R_=0X4;end;end;end;end;end;end;local f=(assert);R_=0x6;local h_,B,N_,C_,F_,x_=nil,nil,nil,nil,nil,nil;while R_~=0x8 do if R_<=3 then if not(R_<=1)then do if R_==2 then R_=0X00004;else function F_()local p8={};local Y8,h8,e8,F8,M8=nil,nil,nil,nil,nil;local V8=(1);local o8=0x4;repeat if not(o8<=2)then do if o8<=4 then if o8==3 then do e8={};end;o8=6;else do Y8={{},{},nil,nil,nil,{},A_,nil,nil};end;o8=0x05;end;else if o8~=0X005 then do F8=H()-0X9E17;end;o8=0X2;else h8=S();o8=0X01;end;end;end;else if not(o8<=0X0)then do if o8~=0X01 then do M8=Y8[0X02];end;o8=7;else Y8[4]=P(h8,0X001,1)~=0X00;do o8=0x0;end;end;end;else Y8[7]=P(h8,2,0X1)~=0;o8=3;end;end;until o8>=0X7;local T8,Z8,y8=nil,nil,(nil);do for dL=0,0X6 do if dL<=2 then do if not(dL<=0X0)then if dL==1 then Y8[Q_]=H();else Y8[0X00012]=S();end;else for VS=S_,F8 do do M8[VS]={[1]=o(),[0X4]=S(),[0x00007]=T(),[0X0002]=S(),[5]=S(),[6]=o(),[H_]=o()};end;end;end;end;else do if not(dL<=4)then do if dL==0X5 then Z8=H()-0X5f63;else y8=S();end;end;else if dL==3 then T8=H();else for S9=0X1,T8 do local D9,E9,z9=0X1,nil,nil;do repeat if D9~=0x0 then E9=H();do D9=0;end;else z9=H();D9=0x2;end;until D9==2;end;local U9=(nil);for wC=0,0x01 do if wC~=0X0 then for Ov=E9,z9 do do(Y8[0X1])[Ov]=U9;end;end;else U9=H();end;end;end;end;end;end;end;end;end;do o8=0X00;end;local g8,K8=nil,(nil);while o8~=0X00003 do if o8<=0X00 then do g8=S()~=0;end;o8=2;else if o8==1 then K8={};o8=0X3;else do for AL=1,Z8 do local jL,NL=nil,nil;local lL=(0);do while lL~=2 do if lL~=0 then do NL=S();end;do lL=2;end;else jL=nil;do lL=1;end;end;end;end;lL=0;while lL~=0X2 do if lL~=0X0 then if NL==0x30 then jL=C(N_(y8),H());elseif NL==0X7d then do jL=X_;end;elseif NL==0XAa then do jL=C(N_(y8),6);end;elseif NL==1 then jL=K();elseif NL==104 then do jL=D();end;elseif NL==47 then jL=C(N_(y8),H());elseif NL==183 then do jL=D();end;elseif NL==0X5E then do jL=C(N_(y8),H());end;elseif NL==0X94 then jL=C(N_(y8),0X00F);elseif NL==179 then do jL=H();end;elseif NL~=184 then else jL=false;end;do lL=2;end;else(p8)[AL-1]=V8;lL=0X0001;end;end;local eL={jL,{}};do(e8)[V8]=eL;end;lL=0X0001;repeat if lL~=0 then V8=V8+1;do lL=0;end;else do if not(g8)then else local c2=(0X00);repeat if c2~=0 then t_=t_+0X1;break;else do j_[t_]=eL;end;c2=0x1;end;until(false);end;end;lL=2;end;until lL>1;end;end;o8=1;end;end;end;o8=2;while o8~=4 do if o8<=0X1 then do if o8==0X0 then(Y8)[0x13]=H();o8=1;else(Y8)[0x8]=T();o8=0X3;end;end;else do if o8~=2 then for qu=0x00001,F8 do local Eu=(Y8[0X02][qu]);do for WU,DU in ipairs(X)do local wU,NU=nil,nil;local FU=(0x02);while FU~=3 do if FU<=0 then if NU==0X00007 then local X2=1;local e2,L2=nil,nil;do while(true)do do if not(X2<=0X0)then if X2==0x1 then do e2=p8[Eu[DU]];end;X2=0x00000;else if L2 then local tj=(nil);for i8=0,0X00002 do if not(i8<=0)then if i8==1 then tj=L2[0X2];else(tj)[#tj+1]={Eu,wU};end;else(Eu)[wU]=L2[0X1];end;end;end;do break;end;end;else do L2=e8[e2];end;X2=2;end;end;end;end;elseif NU==0x000a then(Eu)[DU]=qu+Eu[DU]+1;end;FU=3;else if FU~=1 then wU=R[DU];FU=0X1;else NU=Eu[wU];FU=0;end;end;end;end;end;end;o8=0X04;else do Y8[Y_]=S();end;o8=0;end;end;end;end;local u8=nil;for OA=0,4 do if not(OA<=0X1)then do if OA<=2 then for F2=0X1,T()do(K8)[F2]={S(),T()};end;else if OA==3 then(Y8)[0X00009]=T();else u8=H()-0XdD5;end;end;end;else if OA~=0 then do Y8[3]=K8;end;else(Y8)[16]=H();end;end;end;local r8=(Y8[0X6]);o8=1;repeat if o8~=0x0 then for eQ=0,u8-1 do(r8)[eQ]=F_();end;o8=0X0;else(Y8)[5]=T();o8=0X00002;end;until o8==0X2;Y8[12]=H();do return Y8;end;end;do R_=0X1;end;end;end;elseif R_~=0 then x_=F_();R_=5;else N_=function(Ud)local Bd=(H());local Ld=(nil);local Md=1;repeat do if not(Md<=0X1)then if Md==0X2 then return Ld;else do v=v+Bd;end;do Md=0X2;end;end;else if Md==0X0 then do for k5=0X01,Bd,0X1f3d do local N5=k5+7997-1;if not(N5>Bd)then else N5=Bd;end;local S5,b5=1,(nil);do repeat if not(S5<=0X0)then if S5==1 then do b5={F(w,v+k5-0X1,v+N5-0X1)};end;S5=0X02;else do for RZ=0X00001,#b5 do local IZ=(0);do repeat if IZ==0 then b5[RZ]=I(b5[RZ],J_);IZ=0X001;else do J_=(Ud*J_+0X0e3)%0X100;end;IZ=0x0002;end;until IZ>=2;end;end;end;do S5=0x0;end;end;else Ld=Ld..x(O(b5));S5=0X3;end;until S5==3;end;end;end;Md=0X3;else do Ld='';end;Md=0X0;end;end;end;until(false);end;R_=0x2;end;else if R_<=5 then if R_~=0X4 then(e_)[0x00001]=j_;R_=8;else function C_(YP,vP,dP)local OP,TP,SP=dP[0X02],dP[0X6],dP[5];local FP=(dP[0X00009]);local WP,aP,fP=dP[0X1],dP[4],dP[7];local gP=(U({},{__mode="\118"}));local IP,JP=dP[0x8],nil;JP=function(...)local Ga=({});local ya=0X00001;local Ja=((m and m()or _ENV));local ba,Ia=h_(...);local La={[2]=Ga,[0X001]=dP};ba=ba-1;for yS=0X00000,ba do do if SP>yS then do Ga[yS]=Ia[yS+0X0001];end;else break;end;end;end;local xa,Ea=0,(Ja==W and vP or Ja);if not aP then do Ia=nil;end;else if not(fP)then else Ga[SP]={n=ba>=SP and ba-SP+1 or 0X00000,O(Ia,SP+1,ba+0X1)};end;end;if Ea~=Ja then if not(E)then _ENV=Ea;else E(JP,Ea);end;end;local ja,Ha,Ca,da=h(function()repeat local L9=OP[ya];local f9=(L9[0X07]);ya=ya+0X001;do if f9<48 then do if not(f9>=0x18)then if f9<0Xc then do if not(f9>=0x6)then if f9>=0X3 then if f9<0X0004 then local wZ,jZ=L9[0X0006],(L9[1]);xa=wZ+jZ-1;repeat local ll,kl=gP,Ga;if not(#ll>0)then else local pu=({});for i5,x5 in d,ll do for GV,gV in d,x5 do if gV[1]==kl and gV[0x02]>=0 then local Lb=gV[0x00002];if not pu[Lb]then pu[Lb]={kl[Lb]};end;(gV)[1]=pu[Lb];gV[0X02]=1;end;end;end;end;until true;return true,wZ,jZ;else do if f9==0X05 then Ga[L9[0X6]]=Ga[L9[1]]<=Ga[L9[0X3]];else do Ga[L9[0X6]]={};end;end;end;end;else if not(f9<0x00001)then if f9~=2 then do(Ga)[L9[0X6]]=L9[0X5];end;else if Ga[L9[1]]<Ga[L9[0X003]]then ya=L9[6];end;end;else local oe,Se=L9[0X6],Ga[L9[0X1]];(Ga)[oe+0X1]=Se;(Ga)[oe]=Se[L9[0X4]];end;end;else do if not(f9>=9)then if f9>=0X7 then if f9==8 then e_[L9[1]]=Ga[L9[6]];else local n1=YP[L9[1]];do(Ga)[L9[0X6]]=n1[1][n1[2]];end;end;else if Ga[L9[0x01]]==Ga[L9[0X3]]then else ya=L9[0x6];end;end;else do if f9<10 then(Ga)[L9[0X00006]]=L9[5];else if f9~=11 then local o_=(L9[6]);xa=o_+L9[1]-1;(Ga[o_])(O(Ga,o_+0X001,xa));xa=o_-1;else if not(Ga[L9[1]]<=Ga[L9[3]])then else ya=L9[0X6];end;end;end;end;end;end;end;end;else if not(f9>=18)then if f9>=15 then if not(f9>=16)then Ga[L9[6]]=Ga[L9[1]]>Ga[L9[0X3]];else do if f9~=17 then Ga[L9[6]]=La[L9[0X1]];else Ga[L9[0X6]]=false;end;end;end;else if f9<0x00D then repeat local Ek,jk=gP,Ga;if#Ek>0X00000 then local iq=({});for Jz,uz in d,Ek do do for Ah,Kh in d,uz do do if Kh[0x00001]==jk and Kh[0X2]>=0 then local F5=(Kh[0x02]);do if not iq[F5]then iq[F5]={jk[F5]};end;end;(Kh)[1]=iq[F5];do(Kh)[0X2]=1;end;end;end;end;end;end;end;until true;return true,L9[6],1;else do if f9==0Xe then Ga[L9[0x0006]]=e_[L9[1]];else if not Ga[L9[6]]then ya=L9[1];end;end;end;end;end;else if f9>=21 then if f9<22 then(Ga)[L9[6]]=Ea[L9[5]];else if f9==0X17 then do(Ga)[L9[0X6]]=Ga[L9[0X01]]^Ga[L9[0X3]];end;else local BU=L9[1];local cU=Ga[BU];for dY=BU+1,L9[3]do cU=cU..Ga[dY];end;do Ga[L9[0x6]]=cU;end;end;end;else do if not(f9>=0x13)then(Ga)[L9[6]]=p(Ga[L9[1]],Ga[L9[3]]);else if f9~=0X000014 then if Ga[L9[0X1]]==L9[4]then else ya=L9[6];end;else local Nz=(L9[0X0006]);Ga[Nz](Ga[Nz+1],Ga[Nz+0X0002]);do xa=Nz-0x00001;end;end;end;end;end;end;end;else if f9<0x24 then do if not(f9<0X1e)then if f9>=0X021 then do if f9<34 then if L9[0X3]==120 then ya=ya-1;OP[ya]={[0X6]=(L9[6]-0X66),[0X1]=(L9[0X1]-0X000066),[0X00007]=66};else local ga=(L9[6]);local Ba=(ba-SP);if Ba<0 then Ba=-1;end;do for c8=ga,ga+Ba do Ga[c8]=Ia[SP+(c8-ga)+0x1];end;end;xa=ga+Ba;end;else if f9==35 then Ga[L9[6]]=Ga[L9[1]][Ga[L9[0X3]]];else(Ga)[L9[0X6]]=-Ga[L9[1]];end;end;end;else do if f9<0X1F then local fz=(L9[6]);local yz,qz=Ga[fz]();do if not(yz)then else for mY=0X1,L9[3]do(Ga)[fz+mY]=qz[mY];end;ya=L9[0X1];end;end;else if f9==0X0020 then local cp=TP[L9[0X00001]];local jp,Bp=cp[0X00003],nil;local ap=#jp;if not(ap>0)then else Bp={};for TL=1,ap do local XL=jp[TL];do if XL[0X001]==0X0 then(Bp)[TL-0X01]={Ga,XL[2]};else Bp[TL-0X00001]=YP[XL[0X2]];end;end;end;(g)(gP,Bp);end;(Ga)[L9[0X00006]]=C_(Bp,Ea,cp);else Ga[L9[6]][L9[0X5]]=L9[4];end;end;end;end;else if not(f9>=0X1b)then do if not(f9<25)then do if f9~=26 then local rl=YP[L9[0X1]];rl[0X1][rl[2]]=Ga[L9[0X6]];else(Ga[L9[6]])[Ga[L9[1]]]=Ga[L9[0X3]];end;end;else local TV=(L9[6]);local UV=c(function(...)B();do for MM,UM,VM,lM,kM,XM,PM,iM,tM,rM in...do(B)(true,{MM,UM,VM,lM,kM,XM,PM,iM,tM,rM});end;end;end);UV(Ga[TV],Ga[TV+1],Ga[TV+0X2]);xa=TV;(Ga)[TV]=UV;do ya=L9[1];end;end;end;else if f9<0x1c then do if L9[0X03]~=63 then repeat local i8,N8=gP,Ga;if#i8>0x000 then local yn=({});do for tB,iB in d,i8 do do for Ot,mt in d,iB do do if mt[0x1]==N8 and mt[2]>=0X0 then local zR=(mt[2]);if not yn[zR]then do(yn)[zR]={N8[zR]};end;end;(mt)[0X001]=yn[zR];do(mt)[0X2]=0X1;end;end;end;end;end;end;end;end;until true;return;else ya=ya-1;(OP)[ya]={[0x6]=(L9[0x06]-0xD6),[0X00001]=(L9[1]-0x00d6),[0X00007]=85};end;end;else if f9==0X1d then do Ga[L9[0X6]]=Q(Ga[L9[0X00001]],Ga[L9[0x0003]]);end;else(Ga)[L9[0X6]]=Ga[L9[0x1]]~=Ga[L9[3]];end;end;end;end;end;else do if not(f9>=0X2A)then if not(f9<0X00027)then if not(f9<40)then do if f9==41 then(Ga)[L9[0X06]]=Ga[L9[1]][L9[0x4]];else local Rm=(Ga[L9[0X001]]/Ga[L9[0x3]]);(Ga)[L9[0X0006]]=Rm-Rm%0x01;end;end;else do La[L9[0x001]]=Ga[L9[0X6]];end;end;else if not(f9<0X25)then if f9~=0X26 then Ga[L9[0X00006]]=nil;else(Ga)[L9[6]]=Ga[L9[0X1]]*Ga[L9[3]];end;else local aH=(L9[0X06]);local cH,vH,hH=Ga[aH]();if not(cH)then else(Ga)[aH+1]=vH;Ga[aH+2]=hH;do ya=L9[0X1];end;end;end;end;else if f9<0X00002D then if not(f9<0X2B)then if f9~=0X2c then local x0=(L9[6]);local v0,j0=Ga[x0+1],(Ga[x0+2]);local l0=Ga[x0];do Ga[x0]=c(function()for eA=l0,v0,j0 do B(true,eA);end;end);end;ya=L9[0X1];else(Ga)[L9[0x0006]]=Ga[L9[1]]%Ga[L9[3]];end;else xa=L9[6];Ga[xa]();xa=xa-1;end;else do if f9>=46 then if f9==47 then if not(Ga[L9[1]]<Ga[L9[3]])then do ya=L9[6];end;end;else do if L9[0X3]==194 then ya=ya-0X1;do(OP)[ya]={[1]=(L9[0X1]-207),[6]=(L9[6]-0X00Cf),[7]=0X42};end;elseif L9[0X3]==0Xc9 then ya=ya-0X00001;OP[ya]={[1]=(L9[0X1]-0X0005),[7]=0X022,[6]=(L9[6]-5)};else(Ga)[L9[0X006]]=not Ga[L9[0x1]];end;end;end;else if L9[0X3]~=164 then repeat local wm,mm=gP,(Ga);if#wm>0 then local RS=({});for Lu,pu in d,wm do for dW,yW in d,pu do if yW[1]==mm and yW[0X0002]>=0 then local yS=yW[2];do if not(not RS[yS])then else RS[yS]={mm[yS]};end;end;yW[1]=RS[yS];yW[2]=1;end;end;end;end;until true;local qy=(L9[6]);return false,qy,qy;else ya=ya-0X0001;(OP)[ya]={[0X6]=(L9[6]-233),[0X1]=(L9[0X1]-233),[0X7]=71};end;end;end;end;end;end;end;end;end;elseif not(f9<72)then if f9>=84 then if not(f9>=90)then if not(f9<0X00057)then if not(f9<0X58)then do if f9==89 then do if not(not(Ga[L9[0X1]]<=Ga[L9[3]]))then else ya=L9[6];end;end;else(Ga)[L9[0X6]]=V(Ga[L9[1]]);end;end;else do if Ga[L9[0X1]]==L9[4]then do ya=L9[0X6];end;end;end;end;else if not(f9<0X00055)then if f9~=86 then if L9[3]~=107 then repeat local oH,HH=gP,Ga;if#oH>0 then local vc=({});for GJ,jJ in d,oH do do for GP,EP in d,jJ do do if EP[1]==HH and EP[0x2]>=0X00000 then local tn=EP[2];if not(not vc[tn])then else(vc)[tn]={HH[tn]};end;EP[0x1]=vc[tn];EP[2]=1;end;end;end;end;end;end;until true;return false,L9[0X6],xa;else ya=ya-0X001;OP[ya]={[7]=66,[1]=(L9[1]-183),[0X00006]=(L9[6]-0Xb7)};end;else(Ga)[L9[6]]=Ga[L9[0X1]]/Ga[L9[0X3]];end;else local xF=L9[6];(Ga[xF])(O(Ga,xF+1,xa));xa=xF-1;end;end;else do if f9>=0X5d then if f9>=95 then do if f9~=96 then local Sf=(L9[6]);local Mf,gf=Ga[Sf]();do if not(Mf)then else do ya=L9[1];end;Ga[Sf+3]=gf;end;end;else do Ga[L9[0X00006]]=Ga[L9[0X1]]<Ga[L9[0X3]];end;end;end;else if f9==94 then local SW=(L9[6]);Ga[SW]=Ga[SW](Ga[SW+1],Ga[SW+2]);xa=SW;else do if L9[0X3]==0X8A then do ya=ya-1;end;OP[ya]={[0X6]=(L9[0X6]-0X009E),[7]=27,[0x00001]=(L9[1]-158)};else if not(Ga[L9[6]])then else ya=L9[1];end;end;end;end;end;else if f9<91 then if not(not(L9[0X0005]<Ga[L9[3]]))then else do ya=L9[0X6];end;end;else if f9~=0X0005C then do Ga[L9[0X0006]]=Ga[L9[0X1]]>=Ga[L9[3]];end;else(Ea)[L9[5]]=Ga[L9[0X6]];end;end;end;end;end;else if f9>=0X00004e then if not(f9<81)then if not(f9<0X52)then if f9==83 then do xa=L9[6];end;(Ga)[xa]=Ga[xa]();else if not(not(Ga[L9[1]]<=L9[0X4]))then else do ya=L9[6];end;end;end;else Ga[L9[6]]=Ga[L9[0X0001]]+L9[0x4];end;else do if f9>=79 then do if f9~=80 then local qe=L9[0X6];local Ue=c(function(...)(B)();for xd,Wd in...do(B)(true,xd,Wd);end;end);(Ue)(Ga[qe],Ga[qe+1],Ga[qe+0X2]);do xa=qe;end;do Ga[qe]=Ue;end;do ya=L9[1];end;else Ga[L9[0X6]]=I(Ga[L9[1]],Ga[L9[3]]);end;end;else local fY=L9[0X0006];(Ga)[fY]=Ga[fY](O(Ga,fY+1,xa));do xa=fY;end;end;end;end;else if f9>=75 then do if f9<76 then Ga[L9[6]]=Ga[L9[0X1]]+Ga[L9[3]];else if f9~=77 then local zq=L9[6];local kq=c(function(...)(B)();for jN in...do(B)(true,jN);end;end);(kq)(Ga[zq],Ga[zq+0x001],Ga[zq+2]);do xa=zq;end;Ga[zq]=kq;do ya=L9[1];end;else(Ga)[L9[6]]={O({},1,L9[0X1])};end;end;end;else if f9<0X000049 then Ga[L9[0X0006]][Ga[L9[0X1]]]=L9[4];else do if f9==0x4A then for q8=L9[0x6],L9[0X1]do(Ga)[q8]=nil;end;else do(Ga)[L9[6]]=b(Ga[L9[1]],Ga[L9[3]]);end;end;end;end;end;end;end;else if not(f9<60)then if f9<66 then do if f9<63 then if not(f9<0X3d)then do if f9==62 then local kd=(L9[6]);local id,hd=Ga[kd],((L9[0X03]-1)*0X32);for Fv=0x0001,L9[0X1]do(id)[hd+Fv]=Ga[kd+Fv];end;else Ga[L9[0X6]]=true;end;end;else local ta=(L9[0x006]);local Va,Sa=Ga[ta]();do if not(Va)then else(Ga)[ta+0X1]=Sa;do ya=L9[1];end;end;end;end;else if f9<64 then local Fx,ox=L9[0X6],((L9[0X3]-0X1)*0X32);local Mx=Ga[Fx];for gw=0X1,xa-Fx do Mx[ox+gw]=Ga[Fx+gw];end;else if f9~=0X041 then do if L9[0x3]==45 then do ya=ya-1;end;do OP[ya]={[0X6]=(L9[0x6]-0Xa2),[0X7]=66,[1]=(L9[0X1]-0X0A2)};end;elseif L9[0X0003]==0X00fA then ya=ya-0X1;do(OP)[ya]={[0x1]=(L9[1]-61),[6]=(L9[6]-0X3d),[7]=0X3a};end;elseif L9[3]~=85 then do repeat local t8,X8,W8=gP,Ga,L9[0x00006];if#t8>0X0 then local oG=({});do for M8,P8 in d,t8 do for Xl,El in d,P8 do if El[0X1]==X8 and El[2]>=W8 then local UU=(El[0X2]);if not oG[UU]then(oG)[UU]={X8[UU]};end;do(El)[0X001]=oG[UU];end;do(El)[2]=1;end;end;end;end;end;end;until true;end;else do ya=ya-0x01;end;OP[ya]={[0X0007]=27,[1]=(L9[0X1]-0X0),[6]=(L9[6]-0X0)};end;end;else local pe=L9[6];xa=pe+L9[0x01]-1;do(Ga)[pe]=Ga[pe](O(Ga,pe+0X1,xa));end;xa=pe;end;end;end;end;else if f9<69 then if f9<0X00043 then if L9[0X0003]~=33 then(Ga)[L9[0X06]]=Ga[L9[0X1]];else ya=ya-1;OP[ya]={[1]=(L9[0x01]-0X21),[0X6]=(L9[6]-0X21),[7]=0X55};end;else if f9~=0X00044 then local vn=(L9[6]);Ga[vn](Ga[vn+0X1]);xa=vn-0X1;else(Ga)[L9[0X6]]=Ga[L9[0X1]]-Ga[L9[3]];end;end;else if f9>=0X46 then if f9==0x000047 then if L9[0x3]==134 then do ya=ya-0X0001;end;(OP)[ya]={[7]=0x55,[0X00001]=(L9[1]-0X000085),[6]=(L9[0X6]-133)};else repeat local HI,sI=gP,Ga;if#HI>0X0 then local YR=({});for lw,Jw in d,HI do for Md,bd in d,Jw do do if not(bd[0X01]==sI and bd[0X0002]>=0X000)then else local XG=(bd[2]);if not(not YR[XG])then else do(YR)[XG]={sI[XG]};end;end;do bd[1]=YR[XG];end;bd[2]=0X001;end;end;end;end;end;until true;local Dp=(L9[6]);do return false,Dp,Dp+L9[0X001]-0X0002;end;end;else local qZ=L9[6];Ga[qZ]=Ga[qZ](Ga[qZ+1]);xa=qZ;end;else do(Ga)[L9[0X06]]=A(Ga[L9[0X1]],Ga[L9[3]]);end;end;end;end;else if f9<54 then if f9<0X33 then if not(f9<49)then if f9==50 then do(Ga)[L9[6]]=Ga[L9[1]]~=L9[4];end;else do repeat local Yc,uc=gP,(Ga);if#Yc>0 then local d6=({});for SD,sD in d,Yc do for jt,wt in d,sD do if not(wt[0x1]==uc and wt[2]>=0)then else local Pu=wt[2];if not d6[Pu]then(d6)[Pu]={uc[Pu]};end;wt[1]=d6[Pu];(wt)[0x2]=1;end;end;end;end;until true;end;return true,L9[0X6],0;end;else ya=L9[0X1];end;else if f9<0X34 then local oP=(L9[0X0001]);Ga[L9[6]]=Ga[oP]..Ga[oP+0X001];else if f9~=53 then do Ga[L9[0x6]]=Ga[L9[1]]==Ga[L9[0X03]];end;else if Ga[L9[0X0001]]==Ga[L9[3]]then ya=L9[0X0006];end;end;end;end;else if not(f9>=57)then if f9>=0X37 then if f9==56 then do if L9[0X3]==0X0053 then ya=ya-1;(OP)[ya]={[1]=(L9[0X1]-80),[0X6]=(L9[0X006]-0X50),[7]=0X00001b};elseif L9[0X3]==5 then ya=ya-0X0001;(OP)[ya]={[1]=(L9[0x1]-0Xf2),[0x0007]=0X000025,[0X6]=(L9[0X006]-242)};elseif L9[0X3]~=0X94 then local jP=(L9[0X6]);for c8=jP,jP+(L9[1]-1)do(Ga)[c8]=Ia[SP+(c8-jP)+0X01];end;else ya=ya-1;do(OP)[ya]={[0X06]=(L9[6]-0XAc),[1]=(L9[0X00001]-172),[0X7]=37};end;end;end;else local HZ=(L9[1]);local CZ=L9[6];do if HZ~=0X0 then xa=CZ+HZ-1;end;end;local qZ,DZ,dZ=nil,nil,(L9[3]);if HZ~=1 then qZ,DZ=h_(Ga[CZ](O(Ga,CZ+1,xa)));else qZ,DZ=h_(Ga[CZ]());end;if dZ~=1 then do if dZ~=0X0 then qZ=CZ+dZ-2;xa=qZ+1;else qZ=qZ+CZ-0X001;xa=qZ;end;end;local kK=0;do for pJ=CZ,qZ do kK=kK+1;Ga[pJ]=DZ[kK];end;end;else xa=CZ-0X1;end;end;else do Ga[L9[6]]=Ga[L9[0x1]]==L9[0x0004];end;end;else if not(f9<0X00003a)then if f9~=59 then do Ga[L9[6]]=#Ga[L9[0X1]];end;else(Ga[L9[6]])[L9[0X5]]=Ga[L9[3]];end;else Ga[L9[6]]=Ga[L9[0X001]]%L9[4];end;end;end;end;end;end;until false;end);if ja then if Ha then do if da==1 then return Ga[Ca]();else return Ga[Ca](O(Ga,Ca+1,xa));end;end;else if not(Ca)then else do return O(Ga,Ca,da);end;end;end;else do if j(Ha)=='\115\116r\105n\103'then do if i(Ha,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;do if not(i(Ha,"^.-:%d+: "))then(e)(Ha,0);else e("Luraph Script:"..(WP[ya-1]or"(internal)")..': '..t(Ha),0X000);end;end;else e(Ha,0X000);end;end;end;end;if E then E(JP,vP);end;return JP;end;do R_=3;end;end;else if R_==6 then h_=function(...)return q('#',...),{...};end;do R_=0X00007;end;else B=coroutine.yield;R_=0x0;end;end;end;end;for c1=0X0000,0X1 do if c1~=0 then do return C_(A_,W,x_)(...);end;else do j_=A_;end;end;end;end)(0X2,0Xe,"..",1,setfenv,unpack,string.match,nil,9,table,0x3,'\108sh\105ft',setmetatable,10,string,0XC,5,string.gsub,table.insert,0X00048,getfenv,0X0006,0X8,rawset,string.char,'\098\097nd',rawget,true,'b\120\111r',_ENV,'rshif\116',tonumber,0x4,0x0,bit,0X12,0X7,next,{28420,3942844749,0X00007c4Db8Fd,2096022584,3027610083,0X08fC8a613,0X64F7E178,0X2f070595,723241011},...);